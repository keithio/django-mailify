{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"==============\r\ndjango-mailify\r\n==============\r\n\r\nEnhance the builtin Django mail functionality to include task queueing or deferment.\r\n\r\nGetting Started\r\n---------------\r\n\r\n0. Requirements::\r\n\r\n    Django>=1.4\r\n    South>=0.7.5\r\n    jsonfield>=0.9\r\n\r\n1. Install django-mailify::\r\n\r\n    pip install -e git://github.com/keithio/django-mailify.git#egg=mailify\r\n\r\n2. Add ``mailify`` to your ``INSTALLED_APPS``::\r\n\r\n    INSTALLED_APPS += (\r\n        'mailify',\r\n    )\r\n\r\nConfiguration\r\n-------------\r\n\r\nAll of the following are optional, but highly recommended.\r\n\r\n``DEFAULT_FROM_EMAIL``: your default sender e-mail address, can use with or without name::\r\n\r\n    DEFAULT_FROM_EMAIL = 'Admin <admin@example.com>'\r\n\r\n``MAILIFY_DELETE_AFTER_SEND``: whether or not to delete the message from the database after successful send (default=True)::\r\n\r\n    MAILIFY_DELETE_AFTER_SEND`` = True\r\n\r\n``MAILIFY_DEFAULT_DESCRIPTION``: a description of the e-mail message, for internal use only (default='Message')::\r\n\r\n    MAILIFY_DEFAULT_DESCRIPTION = 'MySite Correspondence'\r\n\r\n``MAILIFY_DEFAULT_SUBJECT_TEMPLATE``: the subject template to be used by default (default='mailify/subject.txt')::\r\n\r\n    MAILIFY_DEFAULT_SUBJECT_TEMPLATE = 'mysite/templates/messages/subject.txt'\r\n\r\n``MAILIFY_DEFAULT_TEXT_TEMPLATE``: the plaintext message template to be used by default (default='mailify/message.txt')::\r\n\r\n    MAILIFY_DEFAULT_TEXT_TEMPLATE = 'mysite/templates/messages/message.txt'\r\n\r\n``MAILIFY_DEFAULT_HTML_TEMPLATE``: the HTML message template to be used by default (default='mailify/message.html')::\r\n\r\n    MAILIFY_DEFAULT_HTML_TEMPLATE = 'mysite/templates/messages/message.html'\r\n\r\n``MAILIFY_DEFAULT_WHEN``: when to send the message, 0 - now, 1 - delay with celery, 2 - defer (default=0)::\r\n\r\n    MAILIFY_DEFAULT_WHEN = 0  # Send the message now\r\n    MAILIFY_DEFAULT_WHEN = 1  # Utilize task queueing from Celery\r\n    MAILIFY_DEFAULT_WHEN = 2  # Defer until later, process queue with send_deferred management command\r\n\r\n``MAILIFY_USE_CELERY``: whether or not to use Celery when creating a message, for use with ``message`` signal (default=False)::\r\n\r\n    MAILIFY_USE_CELERY = True\r\n\r\nUsing Celery\r\n------------\r\n\r\nEnsure that you have Celery installed ``django-celery`` and have added ``'kombu.transport.django'`` and ``djcelery`` to your `INSTALLED_APPS`` before ``mailify``.\r\n\r\nThen, simply use the correct triggers and settings variables to ensure proper assignment to your worker(s).\r\n\r\nUsage\r\n-----\r\n\r\n1. Using signals::\r\n\r\n    from mailify.signals import message\r\n\r\n    message.send([parameters])\r\n\r\n    \"\"\"\r\n    Parameters::\r\n\r\n        desc: string, description of the message, default='Message'\r\n        frm: string, from address, default=settings.DEFAULT_FROM_EMAIL\r\n        recipients: list, recipient e-mail addresses, required\r\n        celery: boolean, whether to use celery to initialize the message, default=False\r\n        when: 0 -- send message now (default)\r\n              1 -- delay and process with celery\r\n              2 -- defer and send later with management command\r\n        keep: boolean, whether to keep the message in the database after sending, default=False\r\n        subject_context: dict, key-value pairs for completing subject template\r\n        message_context: dict, key-value pairs for completing message templates\r\n        subject_template: string, template for subject\r\n        text_template: string, template for text message\r\n        html_template: string, template for HTML message\r\n    \"\"\"\r\n\r\n2. Using model instantiation::\r\n\r\n    from mailify.models import MailifyMessage\r\n\r\n    new_message = MailifyMessage(...)\r\n\r\n    # Check models.py for reference.\r\n\r\nFuture Work\r\n-----------\r\n\r\n* Integrate support for django-sendgrid_\r\n\r\n.. _django-sendgrid: https://github.com/RyanBalfanz/django-sendgrid\r\n\r\n","name":"Django-mailify","tagline":"Enhance the builtin Django mail functionality to include task queueing"}